
extern type T;

let Collection = module {
	type This: [*] => *;
	let empty: [A] => This[A];
};

let Array = Collection with {
	extern type Array = [*] => *;
	override type This = Array;
	override extern let empty: [A] => This[A];
};

let ArrayWithoutEmpty = Collection with {
	override type Self = Array.Self;
};

let e = ArrayWithoutEmpty.empty;

