//enum Option(A: Type)
//	= Some(value: A)
//    | None;

// let boolSome = Some(Int, 2);
// let x: Option(Bool) = None(Bool);

enum List(A: Type)
    = Empty;
    | Cons(head: A, tail: List);

let listEmpty = Empty(Int);
// let listInt = Cons(Int)(1, Empty(Int));
// let listInt1: List(Int) = listInt;